.table-outer
  - columns_count = current_company.tests.maximum(:module).to_i
  table.table.table-striped.table-matrix
    thead
      col width="18%"
      - columns_count.times do |col|
        col width="#{(82/columns_count).ceil}%"
      tr
        th Name
        - columns_count.times do |col|
          th = "Module #{col + 1}"

    tbody
      - current_company.test_groups.order(:position).each do |test_group|
        tr
          td = link_to_if company_signed_in?, test_group.name, test_group, class: 'link'
          - columns_count.times do |index|
            - test = test_group.tests.find_by(module: index + 1)
            - memeber_test = test.member_tests.find_by(member: member) if test.present? && defined? member
            - is_active = memeber_test.present? && !memeber_test.passed?
            - is_passed = memeber_test&.passed?
            td class=([is_active ? 'test--started' : nil, is_passed ? 'test--passed' : nil].compact.join(' '))  
              - if test.present?
                .test-title = link_to_if company_signed_in?, test.name, test, class: ['link', is_passed ? 'link--white' : nil].compact.join(' ')
                .test-title = test.value
                div = test.description
                - if is_passed
                  = image_tag('test_check_mark.svg', class: 'pass-triangle')